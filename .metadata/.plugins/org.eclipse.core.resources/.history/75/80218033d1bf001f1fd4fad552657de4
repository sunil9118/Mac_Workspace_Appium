package Utilities;

import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.remote.RemoteWebElement;

import com.google.common.collect.ImmutableMap;

import io.appium.java_client.AppiumBy;
import io.appium.java_client.android.AndroidDriver;

public class Android_Util {
	AndroidDriver driver;

	public Android_Util(AndroidDriver driver) {
		this.driver = driver;
		// TODO Auto-generated constructor stub
	}

	public void longPressing(WebElement ele) {

		((JavascriptExecutor) driver).executeScript("mobile:longClickGesture",
				ImmutableMap.of("elementId", ((RemoteWebElement) ele).getId(), "duration", 2000));

	}

	public void swipe(WebElement ele, String direction) {

		((JavascriptExecutor) driver).executeScript("mobile:swipeGesture",
				ImmutableMap.of("elementId", ((RemoteWebElement) ele).getId(), "direction", direction, "percent", 0.3));

	}

	/*
	 * public void scrollDown() {
	 * 
	 * boolean canScrollMore; do {
	 * 
	 * canScrollMore= (Boolean) ((JavascriptExecutor)
	 * driver).executeScript("mobile: scrollGesture", ImmutableMap.of( "left", 100,
	 * "top", 100, "width", 200, "height", 200, "direction", "down", "percent", 0.3
	 * ));
	 * 
	 * }while(canScrollMore); }
	 */

	public void scrollToElement(String elementString) {
		driver.findElement(AppiumBy.androidUIAutomator(
				"new UiScrollable(new UiSelector()).scrollIntoView(text(\"" + elementString + "\"));"));

	}

	public void scrollDown() {

		boolean canScrollMore;
		do {

			canScrollMore = (Boolean) ((JavascriptExecutor) driver).executeScript("mobile: scrollGesture",
					ImmutableMap.of("left", (driver.manage().window().getSize().getWidth()) / 2, "top",
							(int) ((driver.manage().window().getSize().getHeight()) * 0.4), "width",
							(driver.manage().window().getSize().getWidth()) / 2, "height",
							(int) ((driver.manage().window().getSize().getHeight()) * 0.4), "direction", "down",
							"percent", 0.9));

		} while (canScrollMore);
	}

	public boolean scrollDownSelectElement(WebElement ele) {

		boolean elementISSelected = false;
		boolean canScrollMore;
		do {

			canScrollMore = (Boolean) ((JavascriptExecutor) driver).executeScript("mobile: scrollGesture",
					ImmutableMap.of("left", (driver.manage().window().getSize().getWidth()) / 2, "top",
							(int) ((driver.manage().window().getSize().getHeight()) * 0.4), "width",
							(driver.manage().window().getSize().getWidth()) / 2, "height",
							(int) ((driver.manage().window().getSize().getHeight()) * 0.4), "direction", "down",
							"percent", 0.9));

			if (ele.isDisplayed()) {

				ele.click();
				elementISSelected = true;
				canScrollMore = elementISSelected;

			}

		} while (canScrollMore);

		return elementISSelected;
	}

	public void scrollUpSelectElement(WebElement ele) {

		boolean canScrollMore;
		do {

			canScrollMore = (Boolean) ((JavascriptExecutor) driver).executeScript("mobile: scrollGesture",
					ImmutableMap.of("left", (driver.manage().window().getSize().getWidth()) / 2, "top",
							(int) ((driver.manage().window().getSize().getHeight()) * 0.8), "width",
							(driver.manage().window().getSize().getWidth()) / 2, "height",
							(int) ((driver.manage().window().getSize().getHeight()) * 0.4), "direction", "up",
							"percent", 0.9));
			if (ele.isDisplayed()) {
				if (!ele.isSelected()) {
					ele.click();
				}

			}

		} while (canScrollMore);
	}

	public void scrollUp() {

		boolean canScrollMore;
		do {

			canScrollMore = (Boolean) ((JavascriptExecutor) driver).executeScript("mobile: scrollGesture",
					ImmutableMap.of("left", (driver.manage().window().getSize().getWidth()) / 2, "top",
							(int) ((driver.manage().window().getSize().getHeight()) * 0.8), "width",
							(driver.manage().window().getSize().getWidth()) / 2, "height",
							(int) ((driver.manage().window().getSize().getHeight()) * 0.4), "direction", "up",
							"percent", 0.9));

		} while (canScrollMore);
	}

}
